{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert-is-number' ).isPrimitive;\nvar args2multislice = require( '@stdlib/slice-base-args2multislice' );\nvar Slice = require( '@stdlib/slice-ctor' );\nvar slice = require( '@stdlib/ndarray-base-slice' );\n\n\n// MAIN //\n\n/**\n* Returns a shifted view of an input ndarray.\n*\n* @param {ndarray} x - input array\n* @param {Array<null|void|integer>} start - starting indices (inclusive)\n* @param {boolean} strict - boolean indicating whether to enforce strict bounds checking\n* @param {boolean} writable - boolean indicating whether a returned array should be writable\n* @throws {RangeError} number of slice dimensions must match the number of array dimensions\n* @throws {RangeError} slice exceeds array bounds\n* @returns {ndarray} ndarray view\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray-ctor' );\n* var ndarray2array = require( '@stdlib/ndarray-to-array' );\n*\n* var buffer = [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n* // returns <ndarray>\n*\n* var sh = x.shape;\n* // returns [ 3, 2 ]\n*\n* var arr = ndarray2array( x );\n* // returns [ [ 1.0, 2.0 ], [ 3.0, 4.0 ], [ 5.0, 6.0 ] ]\n*\n* var s = [ 1, null ];\n* var y = sliceFrom( x, s, false, false );\n* // returns <ndarray>\n*\n* sh = y.shape;\n* // returns [ 2, 2 ]\n*\n* arr = ndarray2array( y );\n* // returns [ [ 3.0, 4.0 ], [ 5.0, 6.0 ] ]\n*/\nfunction sliceFrom( x, start, strict, writable ) {\n\tvar args;\n\tvar s;\n\tvar i;\n\n\targs = [];\n\tfor ( i = 0; i < start.length; i++ ) {\n\t\ts = start[ i ];\n\t\tif ( isNumber( s ) && s !== 0 ) { // note: a start value equal to 0 is equivalent to `null` (i.e., including all elements along a dimension)\n\t\t\targs.push( new Slice( s, null ) );\n\t\t} else {\n\t\t\targs.push( null );\n\t\t}\n\t}\n\treturn slice( x, args2multislice( args ), strict, writable );\n}\n\n\n// EXPORTS //\n\nmodule.exports = sliceFrom;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a shifted view of an input ndarray.\n*\n* @module @stdlib/ndarray-base-slice-from\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray-ctor' );\n* var ndarray2array = require( '@stdlib/ndarray-to-array' );\n* var sliceFrom = require( '@stdlib/ndarray-base-slice-from' );\n*\n* var buffer = [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n* // returns <ndarray>\n*\n* var sh = x.shape;\n* // returns [ 3, 2 ]\n*\n* var arr = ndarray2array( x );\n* // returns [ [ 1.0, 2.0 ], [ 3.0, 4.0 ], [ 5.0, 6.0 ] ]\n*\n* var s = [ 1, null ];\n* var y = sliceFrom( x, s, false, false );\n* // returns <ndarray>\n*\n* sh = y.shape;\n* // returns [ 2, 2 ]\n*\n* arr = ndarray2array( y );\n* // returns [ [ 3.0, 4.0 ], [ 5.0, 6.0 ] ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAW,QAAS,0BAA2B,EAAE,YACjDC,EAAkB,QAAS,oCAAqC,EAChEC,EAAQ,QAAS,oBAAqB,EACtCC,EAAQ,QAAS,4BAA6B,EA4ClD,SAASC,EAAWC,EAAGC,EAAOC,EAAQC,EAAW,CAChD,IAAIC,EACAC,EACAC,EAGJ,IADAF,EAAO,CAAC,EACFE,EAAI,EAAGA,EAAIL,EAAM,OAAQK,IAC9BD,EAAIJ,EAAOK,CAAE,EACRX,EAAUU,CAAE,GAAKA,IAAM,EAC3BD,EAAK,KAAM,IAAIP,EAAOQ,EAAG,IAAK,CAAE,EAEhCD,EAAK,KAAM,IAAK,EAGlB,OAAON,EAAOE,EAAGJ,EAAiBQ,CAAK,EAAGF,EAAQC,CAAS,CAC5D,CAKAT,EAAO,QAAUK,IChCjB,IAAIQ,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isNumber", "args2multislice", "Slice", "slice", "sliceFrom", "x", "start", "strict", "writable", "args", "s", "i", "main"]
}
